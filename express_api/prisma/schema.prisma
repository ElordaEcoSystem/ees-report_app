// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  EXECUTOR
  CUSTOMER
  ADMIN
  OBSERVER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  fullName  String?
  password  String
  role      Role     @default(EXECUTOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workLogs      WorkLog[] @relation("AuthorWorkLogs") // как автор
  executingLogs WorkLog[] @relation("ExecutorsOnLogs") // как исполнитель
}

model WorkLog {
  id         String   @id @default(uuid())
  objectType String?
  object     String
  content    String
  photoUrl   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  authorId String
  author   User   @relation("AuthorWorkLogs", fields: [authorId], references: [id])

  executors User[] @relation("ExecutorsOnLogs") // исполнители
}

// model Group {
//   id        String       @id @default(uuid())
//   name      String
//   createdAt DateTime     @default(now())

//   members   UserGroup[]
// }

// model UserGroup {
//   id        String   @id @default(uuid())
//   userId    String
//   groupId   String
//   joinedAt  DateTime @default(now())

//   user      User     @relation(fields: [userId], references: [id])
//   group     Group    @relation(fields: [groupId], references: [id])

//   @@unique([userId, groupId]) // Один пользователь не может быть в одной группе дважды
// }
